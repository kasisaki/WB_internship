package main

import (
	"fmt"
	"math/rand"
	"time"
)

/*
		–ö –∫–∞–∫–∏–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞,
	–∏ –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

	var justString string
	func someFunc() {
  		v := createHugeString(1 << 10)
  		justString = v[:100]
	}

	func main() {
  		someFunc()
	}
*/

/*
	–ü—Ä–æ–±–ª–µ–º —è —É–∂–µ –≤–∏–∂—É –Ω–µ—Å–∫–æ–ª—å–∫–æ:
	1) –£—Ç–µ—á–∫–∞ –ø–∞–º—è—Ç–∏: –í Go —Å—Ç—Ä–æ–∫–∏ –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã, –∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ä–µ–∑–∞ —Å—Ç—Ä–æ–∫–∏ v[:100] –ø–∞–º—è—Ç—å,
	–∑–∞–Ω–∏–º–∞–µ–º–∞—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π v, –æ—Å—Ç–∞–µ—Ç—Å—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞–∂–µ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.
	–û—Å–æ–±–µ–Ω–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–æ–∑–¥–∞—é—Ç—Å—è –±–æ–ª—å—à–∏–µ —Å—Ç—Ä–æ–∫–∏.

	2) –ù–µ–±—Ä–µ–∂–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ä–µ–∑–æ–≤:
		–Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Ä–∞–∑–º–µ—Ä –∑–∞–Ω–∏–º–∞–µ–º—ã–π –∫–∞–∂–¥—ã–º —Å–∏–º–≤–æ–ª–æ–º, —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ—Ç–µ—Ä–µ —á–∞—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
–Ω–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–∏
		s := "Hello, –î—Ä—É–≥"
		ss := s[8:]
–ø—Ä–∏–≤–µ–¥–µ—Ç –∫ —Ç–æ–º—É, —á—Ç–æ –≤ –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤–æ–π–¥–µ—Ç —Ç–æ–ª—å–∫–æ –≤—Ç–æ—Ä–æ–π –±–∞–π—Ç –∏–∑ –¥–≤—É—Ö, –∫–æ—Ç–æ—Ä—ã–º–∏ –∫–æ–¥–∏—Ä—É–µ—Ç—Å—è –±—É–∫–≤–∞ "–î"

	3) –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è justString –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ—Ç–æ–∫–∞—Ö –±–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏, —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –≥–æ–Ω–∫–µ –¥–∞–Ω–Ω—ã—Ö.

	4) –ù–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ—Å—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏—è: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω—ã –∏–∑ –ª—é–±–æ–π —Ç–æ—á–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Ç–∞–∫–∂–µ –æ–Ω–∏
	–º–æ–≥—É—Ç –ª–µ–≥–∫–æ –∑–∞—Ç–µ–Ω—è—Ç—å—Å—è –æ–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–º–∏ –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–º—É –ø–æ–≤–µ–¥–µ–Ω–∏—é


*/

func createHugeString(size int) string {
	// –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
	var letterRunes = []rune("abcde fghijkl mnopqr stuvwxyzüòä üåü üéâ")

	src := rand.NewSource(time.Now().UnixNano())
	r := rand.New(src)

	result := make([]rune, size)
	for i := range result {
		result[i] = letterRunes[r.Intn(len(letterRunes))]
	}

	return string(result)
}

func someFunc() {
	v := createHugeString(1 << 10) // –µ—Å–ª–∏ —É–∂ –ø—Ä—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ —Å—Ç—Ä–æ–∫–∏
	subStr := make([]byte, 100)
	copy(subStr, v[:100])
	justString := string(subStr)
	fmt.Println(justString)
}

func main() {
	someFunc()
}
